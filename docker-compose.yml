version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mijie_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/var/www
      - ./runtime:/var/www/runtime
      - ./public/storage:/var/www/public/storage
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mijie_network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:5.7
    container_name: mijie_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hHnyn9iKaes71kRx
      MYSQL_DATABASE: api_mijie_xyz
      MYSQL_USER: api_mijie_xyz
      MYSQL_PASSWORD: hHnyn9iKaes71kRx
      MYSQL_CHARSET: utf8mb4
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - mijie_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-phHnyn9iKaes71kRx",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6-alpine
    container_name: mijie_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass 123456 --databases 16
    volumes:
      - redis_data:/data
    networks:
      - mijie_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "123456", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  mijie_network:
    driver: bridge
